# docker build -t jupyter -f services/main/training/learner/Dockerfile.jupyter services/main/
# docker run --gpus all -it -v /share:/share --network host -t jupyter

FROM nvidia/cuda:10.2-base

ENV TZ=Europe/Amsterdam
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN rm /etc/apt/sources.list.d/cuda.list
RUN rm /etc/apt/sources.list.d/nvidia-ml.list

RUN apt-get update && apt-get install -y python3.8 python3-pip htop git build-essential python3.8-dev libzmq3-dev

RUN rm /usr/bin/python3 && ln -s /usr/bin/python3.8 /usr/bin/python3

ADD training/learner/resources/requirements.txt /app/requirements.txt

RUN python3 -m pip install -r /app/requirements.txt
RUN python3 -m pip install packaging cython scipy==1.3.2 MarkupSafe==1.1.1
RUN python3 -m pip install pyzmq pandas sklearn
RUN apt install libffi-dev
RUN python3 -m pip install jupyter

# Add Tini. Tini operates as a process subreaper for jupyter. This prevents kernel crashes.
ENV TINI_VERSION v0.6.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini
RUN chmod +x /usr/bin/tini
ENTRYPOINT ["/usr/bin/tini", "--"]

WORKDIR /app/

#CMD ["sleep", "10000"]
CMD ["jupyter", "notebook", "--port=8888", "--no-browser", "--ip=0.0.0.0", "--allow-root", "--notebook-dir", "/app/", "--NotebookApp.iopub_data_rate_limit", "1e10"]